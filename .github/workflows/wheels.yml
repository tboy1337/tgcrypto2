name: Build and publish wheels

on:
  push:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_TEST_REQUIRES: tox
          CIBW_TEST_COMMAND: cd {project} && tox -e py
          CIBW_BUILD_VERBOSITY: 1

      - name: Store wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl

  publish:
    name: Publish wheels to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Twine
        run: |
          pip install --upgrade twine

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TGCRYPTO2 }}
        run: |
          twine check dist/*
          twine upload dist/*
