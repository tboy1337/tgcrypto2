name: Build and publish wheels

on:
  push:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_BUILD: "cp3{9,10,11,12,13}-*"
          CIBW_SKIP: "cp37-* cp38-*"
          # Tests are now enabled
          CIBW_TEST_REQUIRES: tox
          # Use a different test command for Python 3.13
          CIBW_TEST_COMMAND: >
            cd {project} &&
            if [[ "{python_version}" == *"3.13"* ]]; then
              python -c "import sys; from pprint import pprint; pprint(sys.version)" &&
              tox -e py313 -- -v
            else
              python -c "import sys; from pprint import pprint; pprint(sys.version)" &&
              tox -e py -- -v
            fi
          CIBW_BUILD_VERBOSITY: 1

      - name: Store wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: ./wheelhouse/*.whl

  publish:
    name: Publish wheels to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest

    steps:
      - name: Create dist directory
        run: mkdir -p dist

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: all-wheels
          merge-multiple: false

      - name: Move all wheels to dist directory
        run: |
          find all-wheels -type f -name "*.whl" -exec cp {} dist/ \;
          ls -la dist/

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Twine
        run: |
          pip install --upgrade twine

      - name: Publish wheels to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TGCRYPTO2 }}
        run: |
          twine check dist/*
          twine upload dist/*
